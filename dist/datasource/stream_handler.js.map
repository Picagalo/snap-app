{"version":3,"sources":["../../src/datasource/stream_handler.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAO,Y;;AACC,a,yBAAA,O;;;;;;;;;;;;;;;;;;;;;+BAEK,a;AAEX,+BAAY,OAAZ,EAAqB,UAArB,EAAiC;AAAA;;AAC/B,eAAK,OAAL,GAAe,OAAf;AACA,eAAK,EAAL,GAAU,UAAV;AACA,eAAK,OAAL,GAAe,IAAI,OAAJ,EAAf;AACD;;;;kCAEO;AAAA;;AACN,gBAAI,KAAK,MAAT,EAAiB;AACf,mBAAK,MAAL,CAAY,KAAZ;AACD;;AAED,gBAAI,SAAS,KAAK,OAAL,CAAa,OAAb,CAAqB,CAArB,CAAb;AACA,gBAAI,CAAC,OAAO,MAAZ,EAAoB;AAClB;AACD;;AAED,iBAAK,EAAL,CAAQ,OAAR,CAAgB,OAAO,MAAvB,EAA+B,IAA/B,CAAoC,gBAAQ;AAC1C,kBAAI,CAAC,IAAL,EAAW;AACT;AACD;;AAED,sBAAQ,GAAR,CAAY,wBAAZ,EAAsC,IAAtC;;AAEA,oBAAK,IAAL,GAAY,IAAZ;AACA,kBAAI,WAAW,MAAK,EAAL,CAAQ,GAAR,GAAc,YAAd,GAA6B,KAAK,EAAlC,GAAuC,QAAtD;AACA,oBAAK,MAAL,GAAc,IAAI,WAAJ,CAAgB,QAAhB,CAAd;AACA,oBAAK,MAAL,CAAY,SAAZ,GAAwB,MAAK,SAAL,CAAe,IAAf,OAAxB;AACA,oBAAK,MAAL,CAAY,OAAZ,GAAsB,MAAK,OAAL,CAAa,IAAb,OAAtB;AACA,oBAAK,MAAL,CAAY,MAAZ,GAAqB,MAAK,MAAL,CAAY,IAAZ,OAArB;AACA,oBAAK,MAAL,CAAY,OAAZ,GAAsB,MAAK,OAAL,CAAa,IAAb,OAAtB;AACA,oBAAK,OAAL,GAAe,EAAf;AACD,aAfD;AAgBD;;;oCAES,G,EAAK;AACb,gBAAI,OAAO,KAAK,KAAL,CAAW,IAAI,IAAf,CAAX;AACA,gBAAI,KAAK,IAAL,KAAc,cAAlB,EAAkC;AAChC,mBAAK,kBAAL,CAAwB,IAAxB;AACD;AACF;;;kCAEO,G,EAAK;AACX,oBAAQ,GAAR,CAAY,cAAZ,EAA4B,GAA5B;AACD;;;kCAEO,G,EAAK;AACX,oBAAQ,GAAR,CAAY,eAAZ,EAA6B,GAA7B;AACD;;;iCAEM,G,EAAK;AACV,oBAAQ,GAAR,CAAY,eAAZ,EAA6B,GAA7B;AACD;;;iCAEM;AACL,oBAAQ,GAAR,CAAY,4BAAZ;AACA,gBAAI,KAAK,MAAT,EAAiB;AACb,mBAAK,MAAL,CAAY,KAAZ;AACH;AACD,iBAAK,MAAL,GAAc,IAAd;AACD;;;oCAES,O,EAAS;AACjB,mBAAO,KAAK,OAAL,CAAa,SAAb,CAAuB,OAAvB,CAAP;AACD;;;6CAEkB,I,EAAM;AACvB,gBAAI,UAAU,IAAI,IAAJ,GAAW,OAAX,EAAd;AACA,gBAAI,YAAY,UAAW,KAAK,CAAL,GAAS,IAApC;AACA,gBAAI,aAAa,EAAjB;;AAEA,iBAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,KAAL,CAAW,MAA/B,EAAuC,GAAvC,EAA4C;AAC1C,kBAAI,QAAQ,KAAK,KAAL,CAAW,CAAX,CAAZ;AACA,kBAAI,SAAS,KAAK,OAAL,CAAa,MAAM,SAAnB,CAAb;AACA,kBAAI,CAAC,MAAL,EAAa;AACX,yBAAS,EAAC,QAAQ,MAAM,SAAf,EAA0B,YAAY,EAAtC,EAAT;AACA,qBAAK,OAAL,CAAa,MAAM,SAAnB,IAAgC,MAAhC;AACD;;AAED,kBAAI,OAAO,IAAI,IAAJ,CAAS,MAAM,SAAf,EAA0B,OAA1B,EAAX;AACA,qBAAO,UAAP,CAAkB,IAAlB,CAAuB,CAAC,MAAM,IAAP,EAAa,IAAb,CAAvB;AACA,yBAAW,IAAX,CAAgB,MAAhB;AACD;;AAED,iBAAK,OAAL,CAAa,IAAb,CAAkB;AAChB,oBAAM,UADU;AAEhB,qBAAO,EAAC,MAAM,OAAO,SAAP,CAAP,EAA0B,IAAI,OAAO,OAAP,CAA9B;AAFS,aAAlB;AAID","file":"stream_handler.js","sourcesContent":["import moment from 'moment';\nimport {Subject} from 'vendor/npm/rxjs/Subject';\n\nexport class StreamHandler {\n\n  constructor(options, datasource) {\n    this.options = options;\n    this.ds = datasource;\n    this.subject = new Subject();\n  }\n\n  start() {\n    if (this.source) {\n      this.source.close();\n    }\n\n    var target = this.options.targets[0];\n    if (!target.taskId) {\n      return;\n    }\n\n    this.ds.getTask(target.taskId).then(task => {\n      if (!task) {\n        return;\n      }\n\n      console.log('StreamHandler: start()', task);\n\n      this.task = task;\n      var watchUrl = this.ds.url + '/v1/tasks/' + task.id + '/watch';\n      this.source = new EventSource(watchUrl);\n      this.source.onmessage = this.onMessage.bind(this);\n      this.source.onerror = this.onError.bind(this);\n      this.source.onopen = this.onOpen.bind(this);\n      this.source.onclose = this.onClose.bind(this);\n      this.metrics = {};\n    });\n  }\n\n  onMessage(evt) {\n    var data = JSON.parse(evt.data);\n    if (data.type === 'metric-event') {\n      this.processMetricEvent(data);\n    }\n  }\n\n  onError(evt) {\n    console.log('stream error', evt);\n  }\n\n  onClose(evt) {\n    console.log('stream closed', evt);\n  }\n\n  onOpen(evt) {\n    console.log('stream opened', evt);\n  }\n\n  stop() {\n    console.log('Forcing event stream close');\n    if (this.source) {\n        this.source.close();\n    }\n    this.source = null;\n  }\n\n  subscribe(options) {\n    return this.subject.subscribe(options);\n  }\n\n  processMetricEvent(data) {\n    var endTime = new Date().getTime();\n    var startTime = endTime - (60 * 1 * 1000);\n    var seriesList = [];\n\n    for (var i = 0; i < data.event.length; i++) {\n      var point = data.event[i];\n      var series = this.metrics[point.namespace];\n      if (!series) {\n        series = {target: point.namespace, datapoints: []};\n        this.metrics[point.namespace] = series;\n      }\n\n      var time = new Date(point.timestamp).getTime();\n      series.datapoints.push([point.data, time]);\n      seriesList.push(series);\n    }\n\n    this.subject.next({\n      data: seriesList,\n      range: {from: moment(startTime), to: moment(endTime)}\n    });\n  }\n}\n\n"]}