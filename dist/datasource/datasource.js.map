{"version":3,"sources":["../../src/datasource/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["\nimport moment from 'moment';\nimport {Observable} from 'vendor/npm/rxjs/Observable';\n\nclass StreamHandler {\n\n  start(observer, url) {\n    this.observer = observer;\n\n    console.log('StreamHandler: start: ' + url);\n    this.source = new EventSource(url);\n    this.source.onmessage = this.onMessage.bind(this);\n    this.source.onerror = this.onError.bind(this);\n    this.source.onopen = this.onOpen.bind(this);\n    this.source.onclose = this.onClose.bind(this);\n    this.metrics = {};\n  }\n\n  onMessage(evt) {\n    var data = JSON.parse(evt.data);\n    if (data.type === 'metric-event') {\n      this.processMetricEvent(data);\n    }\n  }\n\n  onError(evt) {\n    console.log('stream error', evt);\n  }\n\n  onClose(evt) {\n    console.log('stream closed', evt);\n  }\n\n  onOpen(evt) {\n    console.log('stream opened', evt);\n  }\n\n  close() {\n    console.log('Forcing event stream close');\n    this.source.close();\n  }\n\n  processMetricEvent(data) {\n    var endTime = new Date().getTime();\n    var startTime = endTime - (60 * 5 *1000)\n\n    for (var i = 0; i < data.event.length; i++) {\n      var point = data.event[i];\n      var series = this.metrics[point.namespace];\n      if (!series) {\n        series = {target: point.namespace, datapoints: []};\n        this.metrics[point.namespace] = series;\n      }\n\n      var time = new Date(point.timestamp).getTime();\n      series.datapoints.push([point.data, time]);\n    }\n\n    this.observer.next({\n      data: this.metrics,\n      range: {from: moment(startTime), to: moment(endTime)}\n    });\n  }\n}\n\nclass SnapDatasource {\n\n  constructor(instanceSettings, $http, backendSrv)  {\n    this.instanceSettings = instanceSettings;\n    this.url = instanceSettings.url;\n    this.$http = $http;\n    this.backendSrv = backendSrv;\n  }\n\n  request(options) {\n    options.url = this.url + options.url;\n    return this.backendSrv.datasourceRequest(options);\n  }\n\n  getTasks() {\n    return this.request({method: 'get', url: '/v1/tasks'}).then(res => {\n      if (!res.data || !res.data.body || !res.data.body.ScheduledTasks) {\n        return [];\n      }\n\n      return res.data.body.ScheduledTasks;\n    });\n  }\n\n  emptyResult() {\n    return Promise.resolve({data: []});\n  }\n\n  getTask(taskId) {\n    return this.request({method: 'get', url: '/v1/tasks/' + taskId}).then(res => {\n      return res.data.body;\n    });\n  }\n\n  createTask(target) {\n    if (target.metrics.length === 0) {\n      return Promise.reject(\"No metrics selected for task\");\n    }\n\n    var task = {\n      version: 1,\n      name: target.taskName,\n      schedule: {\n        type: 'simple',\n        interval: '1s',\n      },\n      workflow: {\n        collect: {\n        }\n      },\n      publish: []\n    };\n\n    task.workflow.collect.metrics = target.metrics.reduce((memo, metric) => {\n      memo[metric.namespace] = {};\n      return memo;\n    }, {});\n\n    console.log('creating task', task);\n    return this.request({method: 'post', url: '/v1/tasks', data: task}).then(res => {\n      console.log('created task', res);\n      return res.data.body;\n    });\n  }\n\n  getTaskId(target) {\n    if (!target) {\n      return Promise.resolve(null);\n    }\n\n    switch (target.mode) {\n      case 'Watch Task': {\n        if (!target.taskId) {\n          return Promise.resolve(null);\n        }\n\n        return this.getTask(target.taskId).then(task => {\n          return task.id;\n        });\n      }\n      case  'Define Task': {\n        if (target.taskId) {\n          return this.getTask(target.taskId).then(task => {\n            return task.id;\n          });\n        }\n        return this.createTask(target).then(task => {\n          target.taskId = task.id;\n          return target.taskId;\n        });\n      }\n    }\n  }\n\n  query(options) {\n    if (this.observable) {\n      return this.emptyResult();\n    }\n\n    if (this.runningQuery) {\n      return this.runningQuery;\n    }\n\n    var target = options.targets[0];\n    this.runningQuery = this.getTaskId(target).then(taskId => {\n\n      if (!taskId) {\n        return this.emptyResult();\n      }\n\n      var watchUrl = this.url + '/v1/tasks/' + taskId + '/watch';\n      this.observable = Observable.create(observer => {\n\n        var handler = new StreamHandler();\n        handler.start(observer, watchUrl);\n\n        return () => {\n          handler.close();\n          this.observable = null;\n        };\n      });\n\n      return this.observable;\n    }).finally(() => {\n      this.runningQuery = null;\n    });\n\n    return this.runningQuery;\n  }\n\n  getMetrics() {\n    if (this.metricsCache) {\n      return Promise.resolve(this.metricsCache);\n    }\n\n    return this.request({method: 'get', url: '/v1/metrics'}).then(res => {\n      if (!res.data || !res.data.body || !res.data.body) {\n        return [];\n      }\n\n      this.metricsCache = res.data.body.map(value => {\n        return {text: value.namespace, value: value.namespace};\n      });\n\n      return this.metricsCache;\n    });\n  }\n\n  deleteTask(taskId) {\n    return this.request({method: 'delete', url: '/v1/tasks/' + taskId});\n  }\n}\n\nexport {SnapDatasource};\n"]}